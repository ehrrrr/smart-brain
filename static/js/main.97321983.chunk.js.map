{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","id","htmlFor","type","name","value","href","Register","Logo","options","max","height","width","alt","src","brain","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onChange","FaceRecognition","box","imageUrl","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","color","opacity","random","anim","speed","opacity_min","sync","line_linked","shadow","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97321983.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.cf1bd1d3.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\tif (isSignedIn) {\r\n\t\treturn (\r\n\t\t\t<nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n\t\t\t\t<p\r\n\t\t\t\t\tonClick={() => onRouteChange('signout')}\r\n\t\t\t\t\tclassName=\"light-gray f3 link dim black underline pa3 pointer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSign Out\r\n\t\t\t\t</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n\t\t\t\t<p\r\n\t\t\t\t\tonClick={() => onRouteChange('signin')}\r\n\t\t\t\t\tclassName=\"light-gray f3 link dim black underline pa3 pointer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</p>\r\n\t\t\t\t<p\r\n\t\t\t\t\tonClick={() => onRouteChange('register')}\r\n\t\t\t\t\tclassName=\"light-gray f3 link dim black underline pa3 pointer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n\treturn (\r\n\t\t<article className=\"bg-white o-90 br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t<div className=\"measure\">\r\n\t\t\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t\t<legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t\t\t<div className=\"mt3\">\r\n\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tname=\"email-address\"\r\n\t\t\t\t\t\t\t\tid=\"email-address\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mv3\">\r\n\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonClick={() => onRouteChange('home')}\r\n\t\t\t\t\t\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue=\"Sign in\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"lh-copy mt3\">\r\n\t\t\t\t\t\t<p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default Signin;\r\n","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n\treturn (\r\n\t\t<article className=\"bg-white o-90 br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t<div className=\"measure\">\r\n\t\t\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t\t<legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t\t\t<div className=\"mt3\">\r\n\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n\t\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mt3\">\r\n\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tname=\"email-address\"\r\n\t\t\t\t\t\t\t\tid=\"email-address\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mv3\">\r\n\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonClick={() => onRouteChange('home')}\r\n\t\t\t\t\t\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue=\"Register\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className=\"ma4 mt0\">\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 150, width: 150 }}>\r\n\t\t\t\t<div className=\"Tilt-inner pa3\">\r\n\t\t\t\t\t<img alt=\"logo\" src={brain} />\r\n\t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"white f3\">{'Eti, your current rank is...'}</div>\r\n\r\n\t\t\t<div className=\"white f1\">{'#5'}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className=\"f5 light-gray\">{'This Magic Brain will detect faces in your pictures. Git it a try.'}</p>\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<div className=\"form center pa4 br3 shadow-5 \">\r\n\t\t\t\t\t<input className=\"f4 pa2 w-70 center\" type=\"text\" onChange={onInputChange} />\r\n\t\t\t\t\t<button className=\"w-30 grow f4 link ph3 pv2 dib white bg-dark-pink\" onClick={onButtonSubmit}>\r\n\t\t\t\t\t\tDetect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ box, imageUrl }) => {\r\n\treturn (\r\n\t\t<div className=\"center ma\">\r\n\t\t\t<div className=\"absolute mt2\">\r\n\t\t\t\t<img id=\"inputImage\" alt=\"\" src={imageUrl} width=\"500px\" heigh=\"auto\" />\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"bounding-box\"\r\n\t\t\t\t\tstyle={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n\tapiKey: '902f344e9eab4808831eea530ed199db'\n});\n\nconst particlesOptions = {\n\tparticles: {\n\t\tnumber: {\n\t\t\tvalue: 80,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 300\n\t\t\t}\n\t\t},\n\t\tcolor: {\n\t\t\tvalue: '#9fe3f9'\n\t\t},\n\t\topacity: {\n\t\t\tvalue: 0.8,\n\t\t\trandom: true,\n\t\t\tanim: {\n\t\t\t\tenable: true,\n\t\t\t\tspeed: 8,\n\t\t\t\topacity_min: 0.4,\n\t\t\t\tsync: false\n\t\t\t}\n\t\t},\n\t\tline_linked: {\n\t\t\tcolor: '#69c8ea',\n\t\t\tshadow: {\n\t\t\t\tenable: false\n\t\t\t}\n\t\t}\n\t}\n};\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinput: '',\n\t\t\timageUrl: '',\n\t\t\tbox: {},\n\t\t\troute: 'signin',\n\t\t\tisSignedIn: false\n\t\t};\n\t}\n\n\tcalculateFaceLocation = (data) => {\n\t\tconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\t\tconst image = document.getElementById('inputImage');\n\t\tconst width = Number(image.width);\n\t\tconst height = Number(image.height);\n\t\treturn {\n\t\t\tleftCol: clarifaiFace.left_col * width,\n\t\t\ttopRow: clarifaiFace.top_row * height,\n\t\t\trightCol: width - clarifaiFace.right_col * width,\n\t\t\tbottomRow: height - clarifaiFace.bottom_row * height\n\t\t};\n\t};\n\n\tdisplayFaceBox = (box) => {\n\t\tthis.setState({ box: box });\n\t};\n\n\tonInputChange = (event) => {\n\t\tthis.setState({ input: event.target.value });\n\t};\n\n\tonButtonSubmit = () => {\n\t\tthis.setState({ imageUrl: this.state.input });\n\t\tapp.models\n\t\t\t.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n\t\t\t.then((response) => this.displayFaceBox(this.calculateFaceLocation(response)))\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tonRouteChange = (route) => {\n\t\tif (route === 'signout') {\n\t\t\tthis.setState({ isSignedIn: 'false' });\n\t\t} else if (route === 'home') {\n\t\t\tthis.setState({ isSignedIn: 'true' });\n\t\t}\n\n\t\tthis.setState({ route: route });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Particles className=\"particles\" params={particlesOptions} />\n\t\t\t\t<Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n\t\t\t\t{this.state.route === 'home' ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Logo />\n\t\t\t\t\t\t<Rank />\n\t\t\t\t\t\t<ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n\t\t\t\t\t\t<FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n\t\t\t\t\t</div>\n\t\t\t\t) : this.state.route === 'signin' ? (\n\t\t\t\t\t<Signin onRouteChange={this.onRouteChange} />\n\t\t\t\t) : (\n\t\t\t\t\t<Register onRouteChange={this.onRouteChange} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}